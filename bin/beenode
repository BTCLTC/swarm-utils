#!/bin/sh

# ###########################################################
# 使用前配置 
AH_ArgsMeta="
# Usage: beenode <cmd> <nodeid> [OPTIONS]...
# Args:
#   cmd:                    ### run { start | stop | restart | console | config }
#   nodeid                  ### nodeid nust be in [000~999]
# OPTIONS:
?   -h, --help              ### display this help and exit
?   -v, --version           ### output version information and exit
"  # 参数元数据配置
AH_ShowHelp="--help"  # 输出帮助信息的指令参数(可省略)
AH_DefaultHelpMeta="no"  # 因为AH_ArgsMeta中已经配置了--help和--version，无须使用默认配置
AH_ShowVersion="--version"  # 输出版本信息的指令参数（可省略）
AH_VersionInfo="version: 0.0.1, copyright by yaoming (2021)"  # 自定义版本信息（可省略）
AH_StrictParam="no"  # 不使用严格参数（支持以"-"开头的参数）
AH_LeastParamCount=0  # 参数数量不得少于1个（0表示不验证最少数量）

# ###########################################################
# 引入工具文件（这里按实际目录结构引入）
source `dirname $0`/../shell-utils/lib/args-helper 
source /etc/profile

# 用户检测
if [ `whoami` != "root" ]; then
    echo "Must run by root user."
    exit 1
fi

# 环境变量检测
if [ -z "$BEE_WORK_DIR" ]; then
    source /etc/profile
    if [ -z "$BEE_WORK_DIR" ]; then
        echo "BEE_WORK_DIR has not in /etc/profile, pleash install bee at first."
        exit 1
    fi
fi

# 获得参数
cmd="${AH_PARAMS[0]}"
nodeid=""
nodepath=""
screenid=""

# 进入工作目录
cd $BEE_WORK_DIR

function get_node_id_path() {
    nodeid="${AH_PARAMS[1]}"
    if [ -z "$nodeid" ]; then
        echo "must input 'nodeid' to init."
        exit 1
    fi
    if [ -z "$(echo $nodeid | egrep '^[0-9]{3}$')" ]; then
        echo "'nodeid' nust be a number [000~999]."
        exit 1
    fi
    nodepath="$BEE_WORK_DIR/nodes/$nodeid"
    screenid="bee$nodeid"
}

# file, src, dest
function replacefile(){
    file=$1
    src=$(echo "$2" | sed s/"\\/"/"\\\\\/"/g)
    dest=$(echo "$3" | sed s/"\\/"/"\\\\\/"/g)
    sed -i s/"$src"/"$dest"/g "$file"
} 

function start() {
    get_node_id_path
    if [ ! -f "$nodepath/bee.yaml" ]; then
        mkdir -p $nodepath
        cp -f `dirname $0`/../conf/bee-default.yaml "$nodepath/bee.yaml"
        replacefile "$nodepath/bee.yaml" "{{nodepath}}" "$nodepath"
        replacefile "$nodepath/bee.yaml" "{{nodeid}}" "$nodeid"
    fi
    screen -S "$screenid" bee start --config=$nodepath/bee.yaml
}

function stop() {
    get_node_id_path
    pid=$(ps -ef | grep "bee start --config=$nodepath/bee.yaml" | grep -v "screen" | grep -v "grep" | awk '{print $2}')
    if [ -n "$pid" ]; then
        kill $pid
        echo bee node [$nodeid] has down.
    else
        echo bee node [$nodeid] not started.
    fi
}

function config() {
    get_node_id_path
    cat $nodepath/bee.yaml
}

if [ "$cmd" == "start" ]; then
    start
elif [ "$cmd" == "stop" ]; then
    stop
elif [ "$cmd" == "restart" ]; then
    stop
    sleep 3
    start
elif [ "$cmd" == "console" ]; then
    get_node_id_path
    screen -x "$screenid"
elif [ "$cmd" == "config" ]; then
    config
else
    echo "cmd must in { start | stop | restart | console | config }"
fi